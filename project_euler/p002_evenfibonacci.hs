-- Project Euler Problem 2 (Even Fibonaci numbers
--
-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
--


-- Returns a 2-item tuple with the second of two items in the tuple as the first and their sum
fib_next :: (Integral a) => (a,a) -> (a,a)
fib_next (x,y) = (y,x+y)

fib_pair = (iterate fib_next (0,1))
fibonacci = [ fst x | x <- fib_pair ]
even_fib = [ x | x <- fibonacci, x `mod` 2 == 0]

main = do
	print (sum (takeWhile (<= 4000000) even_fib))
	
	

